// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {npx prisma migrate dev --name create_teams_and_invitations
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  teams         TeamMember[]
  sentInvitations Invitation[] @relation("Sender")
  receivedInvitations Invitation[] @relation("Recipient")
}

model Team {
  id          String      @id @default(uuid())
  name        String
  description String?
  slug        String      @unique
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  members     TeamMember[]
  invitations Invitation[]
}

model TeamMember {
  id        String   @id @default(uuid())
  userId    String
  teamId    String
  role      String   @default("member") // admin, member
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  team      Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@unique([userId, teamId])
}

model Invitation {
  id          String    @id @default(uuid())
  teamId      String
  senderId    String
  email       String?
  token       String    @unique
  status      String    @default("pending") // pending, accepted, rejected
  expiresAt   DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  recipientId String?
  team        Team      @relation(fields: [teamId], references: [id], onDelete: Cascade)
  sender      User      @relation("Sender", fields: [senderId], references: [id], onDelete: Cascade)
  recipient   User?     @relation("Recipient", fields: [recipientId], references: [id], onDelete: SetNull)
}