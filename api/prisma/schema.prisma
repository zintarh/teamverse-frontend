// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id        Int   @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  channels  Channel[]
  Playlistchannel  PlaylistChannel[]
  Weekendchannel  WeekendChannel[]
  WorkStationchannel  WorkStationChannel[]
}

model Channel {
  id        String   @id @default(uuid())
  name      String
  type      ChannelType
  teamId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Team      Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
}

model PlaylistChannel {
  id        Int   @id @default(autoincrement())
  name      ChannelType   @default(PLAYLIST)
  teamId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Team      Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
}
model WeekendChannel {
  id        Int   @id @default(autoincrement())
  name      ChannelType   @default(WEEKEND)
  teamId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Team      Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
}
model WorkStationChannel {
  id        Int   @id @default(autoincrement())
  name      ChannelType   @default(WORKSTATION)
  teamId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Team      Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
}



enum ChannelType {
  WEEKEND
  WORKSTATION
  PLAYLIST
}